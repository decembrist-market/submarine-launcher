package main

import (
	"fmt"
	"os"
	"path/filepath"
	"submarine-launcher/internal"

	tea "github.com/charmbracelet/bubbletea"
)

func main() {
	// –í–∫–ª—é—á–∞–µ–º –ø–æ–¥–¥–µ—Ä–∂–∫—É —Ü–≤–µ—Ç–æ–≤ –≤ Windows —Ç–µ—Ä–º–∏–Ω–∞–ª–µ
	if err := internal.EnableWindowsColors(); err == nil {
		// –û—á–∏—Å—Ç–∫–∞ —ç–∫—Ä–∞–Ω–∞ –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
		fmt.Print("\033[2J\033[H")
	}

	launcherPath, err := os.Executable()
	if err != nil {
		internal.ShowExitMessage(internal.Error, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø—É—Ç–∏ –∫ –∏—Å–ø–æ–ª–Ω—è–µ–º–æ–º—É —Ñ–∞–π–ª—É: "+err.Error())
		return
	}

	gameDirPath := internal.GetGameDirPath(launcherPath)

	// –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –ª–∞—É–Ω—á–µ—Ä–∞
	for {
		// –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∏–≥—Ä—ã
		localVersionPath := filepath.Join(gameDirPath, internal.VersionFileName)
		gameDirExist := true
		gameInstalled := true
		needsUpdate := false

		if _, err := os.Stat(gameDirPath); os.IsNotExist(err) {
			gameDirExist = false
			gameInstalled = false
		} else if err != nil {
			internal.ShowExitMessage(internal.Error, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–∞–ø–∫–∏ –∏–≥—Ä—ã: ")
			return
		}

		if gameDirExist {
			if _, err := os.Stat(localVersionPath); os.IsNotExist(err) {
				gameInstalled = false
			} else if err != nil {
				internal.ShowExitMessage(internal.Error, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –≤–µ—Ä—Å–∏–∏ –∏–≥—Ä—ã: "+err.Error())
				return
			}
		}

		// –ï—Å–ª–∏ –∏–≥—Ä–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞, –ø—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
		if gameInstalled {
			localVersion, err := os.ReadFile(localVersionPath)
			if err != nil {
				internal.ShowExitMessage(internal.Error, "–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ —Å –≤–µ—Ä—Å–∏–µ–π: "+err.Error())
				return
			}

			remoteVersion, err := internal.GetRemoteVersion()
			if err != nil {
				internal.ShowStyledMessage(internal.Warn, "–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è, –∑–∞–ø—É—Å–∫–∞–µ–º –∏–≥—Ä—É...")
			} else {
				needsUpdate = string(localVersion) != remoteVersion
			}
		}

		// –°–æ–∑–¥–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º TUI –º–æ–¥–µ–ª—å
		model := internal.NewTUIModel(gameInstalled, needsUpdate)
		p := tea.NewProgram(model, tea.WithAltScreen(), tea.WithMouseCellMotion())

		finalModel, err := p.Run()
		if err != nil {
			internal.ShowStyledMessage(internal.Error, "–û—à–∏–±–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞: "+err.Error())
			return
		}

		// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—ã–±–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
		tuiModel := finalModel.(internal.TUIModel)
		if !tuiModel.WasSelected() {
			return
		}
		choice := tuiModel.GetChoice()

		shouldExit := false

		if !gameInstalled {
			// –ò–≥—Ä–∞ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞
			switch choice {
			case 0: // –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–≥—Ä—É
				if !gameDirExist {
					err := os.Mkdir(gameDirPath, 0755)
					if err != nil {
						// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –º–µ–Ω—é
						fmt.Printf("–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏: %s\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...\n", err.Error())
						fmt.Scanln()
						continue
					}
				}

				// –í—ã—Ö–æ–¥–∏–º –∏–∑ TUI —Ä–µ–∂–∏–º–∞ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏
				fmt.Print("\033[2J\033[H") // –û—á–∏—â–∞–µ–º —ç–∫—Ä–∞–Ω
				fmt.Println("–ù–∞—á–∏–Ω–∞–µ—Ç—Å—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–≥—Ä—ã...")
				err = internal.TryUnzipGame(gameDirPath, launcherPath)
				if err != nil {
					// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –º–µ–Ω—é
					fmt.Printf("–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏: %s\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...\n", err.Error())
					fmt.Scanln()
					continue
				}

				fmt.Println("\n‚úÖ –ò–≥—Ä–∞ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞!")
				fmt.Println("–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å –∏–≥—Ä—É –∏–∑ –º–µ–Ω—é.")
				fmt.Print("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é...")
				fmt.Scanln()
				// –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ü–∏–∫–ª, —á—Ç–æ–±—ã –ø–æ–∫–∞–∑–∞—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –º–µ–Ω—é
				continue
			case 1: // –í—ã—Ö–æ–¥
				shouldExit = true
			}
		} else if needsUpdate {
			// –ò–≥—Ä–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞, –Ω–æ –Ω—É–∂–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
			switch choice {
			case 0: // –û–±–Ω–æ–≤–∏—Ç—å –∏–≥—Ä—É
				internal.ShowStyledMessage(internal.Info, "–ù–∞—á–∏–Ω–∞–µ—Ç—Å—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–≥—Ä—ã...")
				err = internal.TryUnzipGame(gameDirPath, launcherPath)
				if err != nil {
					internal.ShowStyledMessage(internal.Error, "–û—à–∏–±–∫–∞: "+err.Error())
					continue
				}
				internal.ShowStyledMessage(internal.Success, "–ò–≥—Ä–∞ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞!")
				internal.TryRunGame(gameDirPath)
				shouldExit = true
			case 1: // –ó–∞–ø—É—Å—Ç–∏—Ç—å –∏–≥—Ä—É
				internal.TryRunGame(gameDirPath)
				shouldExit = true
			case 2: // –í—ã—Ö–æ–¥
				shouldExit = true
			}
		} else {
			// –ò–≥—Ä–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –∏ –∞–∫—Ç—É–∞–ª—å–Ω–∞
			switch choice {
			case 0: // –ó–∞–ø—É—Å—Ç–∏—Ç—å –∏–≥—Ä—É
				internal.TryRunGame(gameDirPath)
				shouldExit = true
			case 1: // –í—ã—Ö–æ–¥
				shouldExit = true
			}
		}

		if shouldExit {
			internal.ShowStyledMessage(internal.Info, "–î–æ —Å–≤–∏–¥–∞–Ω–∏—è! üëã")
			return
		}
	}
}
