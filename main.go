package main

import (
	"fmt"
	"os"
	"path/filepath"
	"submarine-launcher/internal"

	tea "github.com/charmbracelet/bubbletea"
)

func main() {
	// –í–∫–ª—é—á–∞–µ–º –ø–æ–¥–¥–µ—Ä–∂–∫—É —Ü–≤–µ—Ç–æ–≤ –≤ Windows —Ç–µ—Ä–º–∏–Ω–∞–ª–µ
	if err := internal.EnableWindowsColors(); err == nil {
		// –û—á–∏—Å—Ç–∫–∞ —ç–∫—Ä–∞–Ω–∞ –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
		fmt.Print("\033[2J\033[H")
	}

	launcherPath, err := os.Executable()
	if err != nil {
		internal.ShowStyledMessage(internal.Error, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø—É—Ç–∏ –∫ –∏—Å–ø–æ–ª–Ω—è–µ–º–æ–º—É —Ñ–∞–π–ª—É: "+err.Error())
		internal.ShowExitMessage(internal.Error)
		return
	}

	gameDirPath, err := internal.GetGameDirection(launcherPath)
	if err != nil {
		internal.ShowStyledMessage(internal.Error, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –∏–≥—Ä—ã: "+err.Error())
		internal.ShowExitMessage(internal.Error)
		return
	}

	// –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∏–≥—Ä—ã
	localVersionPath := filepath.Join(gameDirPath, internal.VersionFileName)
	gameInstalled := true
	needsUpdate := false

	if _, err := os.Stat(localVersionPath); os.IsNotExist(err) {
		gameInstalled = false
	} else if err != nil {
		internal.ShowStyledMessage(internal.Error, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –≤–µ—Ä—Å–∏–∏ –∏–≥—Ä—ã: "+err.Error())
		internal.ShowExitMessage(internal.Error)
		return
	}

	// –ï—Å–ª–∏ –∏–≥—Ä–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞, –ø—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
	if gameInstalled {
		localVersion, err := os.ReadFile(localVersionPath)
		if err != nil {
			internal.ShowStyledMessage(internal.Error, "–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ —Å –≤–µ—Ä—Å–∏–µ–π: "+err.Error())
			internal.ShowExitMessage(internal.Error)
			return
		}

		remoteVersion, err := internal.GetRemoteVersion()
		if err != nil {
			internal.ShowStyledMessage(internal.Warn, "–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è, –∑–∞–ø—É—Å–∫–∞–µ–º –∏–≥—Ä—É...")
		} else {
			needsUpdate = string(localVersion) != remoteVersion
		}
	}

	// –°–æ–∑–¥–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º TUI –º–æ–¥–µ–ª—å
	model := internal.NewTUIModel(gameInstalled, needsUpdate)
	p := tea.NewProgram(model, tea.WithAltScreen(), tea.WithMouseCellMotion())

	finalModel, err := p.Run()
	if err != nil {
		internal.ShowStyledMessage(internal.Error, "–û—à–∏–±–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞: "+err.Error())
		return
	}

	// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—ã–±–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	tuiModel := finalModel.(internal.TUIModel)
	if !tuiModel.WasSelected() {
		return
	}
	choice := tuiModel.GetChoice()

	if !gameInstalled {
		// –ò–≥—Ä–∞ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞
		switch choice {
		case 0: // –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–≥—Ä—É
			internal.ShowStyledMessage(internal.Info, "–ù–∞—á–∏–Ω–∞–µ—Ç—Å—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–≥—Ä—ã...")
			err = internal.TryUnzipGame(gameDirPath, launcherPath)
			if err != nil {
				internal.ShowStyledMessage(internal.Error, "–û—à–∏–±–∫–∞: "+err.Error())
				break
			}
			internal.ShowStyledMessage(internal.Success, "–ò–≥—Ä–∞ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞!")
		case 1: // –í—ã—Ö–æ–¥
			internal.ShowStyledMessage(internal.Info, "–î–æ —Å–≤–∏–¥–∞–Ω–∏—è! üëã")
			return
		}
	} else if needsUpdate {
		// –ò–≥—Ä–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞, –Ω–æ –Ω—É–∂–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
		switch choice {
		case 0: // –û–±–Ω–æ–≤–∏—Ç—å –∏–≥—Ä—É
			internal.ShowStyledMessage(internal.Info, "–ù–∞—á–∏–Ω–∞–µ—Ç—Å—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–≥—Ä—ã...")
			err = internal.TryUnzipGame(gameDirPath, launcherPath)
			if err != nil {
				internal.ShowStyledMessage(internal.Error, "–û—à–∏–±–∫–∞: "+err.Error())
				break
			}
			internal.ShowStyledMessage(internal.Success, "–ò–≥—Ä–∞ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞!")
			internal.TryRunGame(gameDirPath)
		case 1: // –ó–∞–ø—É—Å—Ç–∏—Ç—å –∏–≥—Ä—É
			internal.TryRunGame(gameDirPath)
		case 2: // –í—ã—Ö–æ–¥
			internal.ShowStyledMessage(internal.Info, "–î–æ —Å–≤–∏–¥–∞–Ω–∏—è! üëã")
			return
		}
	} else {
		// –ò–≥—Ä–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –∏ –∞–∫—Ç—É–∞–ª—å–Ω–∞
		switch choice {
		case 0: // –ó–∞–ø—É—Å—Ç–∏—Ç—å –∏–≥—Ä—É
			internal.TryRunGame(gameDirPath)
		case 1: // –í—ã—Ö–æ–¥
			internal.ShowStyledMessage(internal.Info, "–î–æ —Å–≤–∏–¥–∞–Ω–∏—è! üëã")
			return
		}
	}

	internal.ShowExitMessage(internal.Info)
}
